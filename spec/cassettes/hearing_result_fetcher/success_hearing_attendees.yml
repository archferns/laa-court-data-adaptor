---
http_interactions:
- request:
    method: get
    uri: "<COMMON_PLATFORM_URL>/hearing/results?hearingId=29b73d8f-7683-4e27-9069-f7a031672c35"
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Ocp-Apim-Subscription-Key:
      - "<SHARED_SECRET_KEY>"
      User-Agent:
      - Faraday v1.0.1
  response:
    status:
      code: 200
      message: OK
    headers:
      transfer-encoding:
      - chunked
      content-type:
      - text/plain; charset=utf-8
      request-context:
      - appId=cid-v1:e7545c86-6eab-4a30-bf6d-7ed8b5691e3e
      date:
      - Fri, 21 Aug 2020 09:10:27 GMT
      x-frame-options:
      - SAMEORIGIN
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 21 Aug 2020 09:10:27 GMT
recorded_with: VCR 6.0.0
